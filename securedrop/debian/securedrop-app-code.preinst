#!/bin/bash
# preinst script for securedrop-app-code
#
# see: dh_installdeb(1)

set -e
#set -x
# summary of how this script can be called:
#        * <new-preinst> `install'
#        * <new-preinst> `install' <old-version>
#        * <new-preinst> `upgrade' <old-version>
#        * <old-preinst> `abort-upgrade' <new-version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

function service_exists() {
    # Test for the existence of systemctl services. Added to check for and
    # disable haveged if present

    local x=$1
    if systemctl list-unit-files --type service | grep -F "${x}.service"; then
        return 0
    else
        return 1
    fi
}

function permanently_disable_swap() {
    # Swap usage is prohibited in the context of SecureDrop, due to risk of
    # forensic discovery recovering plaintext submissions that were written
    # to disk prior to encrypting. If a swapfile is active, disable it,
    # and disable all swap entries from /etc/fstab, to prevent mounting
    # after reboots.

    # Check if swapfile is currently enabled.
    local swap_result
    swap_result="$(swapon --summary)"

    # Search for path format in output.
    local swap_partition
    swap_partition="$(grep '/' <<< "${swap_result}" | perl -ane 'print $F[0]')"

    # If a filepath for swap was found, disable it.
    if [[ -n "${swap_partition}" ]]; then
        echo "Disabling swap..."
        # Disable all active swap.
        swapoff --all
        # Securely erase swap partition.
        shred "${swap_partition}"
    fi

    # Check that third field "fstype" is set to "swap",
    # then check that the line is currently NOT commented out,
    # then comment the line out, modifying the file in place.
    # This will be done for all swap entries in fstab, regardless of active
    # state, to ensure no swap is enabled on next boot.
    perl -i -apne '$F[2] eq "swap" && /^[^\s#]+?/ && s/^/#/g' /etc/fstab
}


function migrate_custom_logo() {
  # Previously, logo customization was done by overwriting the logo file
  # that ships as part of the package. This is no longer supported. For older
  # installations, if no custom logo exists, we instantiate it here.

  if [[ -f "/var/www/securedrop/static/i/logo.png" &&
        ! -e "/var/www/securedrop/static/i/custom_logo.png" ]]; then
          cp /var/www/securedrop/static/i/logo.png /var/www/securedrop/static/i/custom_logo.png
  fi
}


function convert_document_to_journalist_interface() {
    # Helper function to migrate the old "Document Interface" config files
    # to the new "Journalist Interface" naming scheme. Affects tor and apache.

    if [[ -d /var/lib/tor/services/document ]]; then
        # Move tor service hostname and keys.
        mv /var/lib/tor/services/document /var/lib/tor/services/journalist
        # Update torrc to use new tor service hostname directory.
        perl -pi -e 's#^(HiddenServiceDir /var/lib/tor/services/)document#$1journalist#' /etc/tor/torrc
        # Bounce tor service.
        service tor restart
    fi

    if [[ -f /etc/apache2/sites-available/document.conf ]]; then
        # Stop apache prior to migrating vhost.
        service apache2 stop
        # Convert apache vhost settings to use the new interface name.
        perl -p -e 's/document/journalist/' /etc/apache2/sites-available/document.conf \
            > /etc/apache2/sites-available/journalist.conf
        rm -f /etc/apache2/sites-available/document.conf
        rm -f /etc/apache2/sites-enabled/document.conf
        # Enable new site; don't start apache, since `postinst` will start it.
        a2ensite journalist
    fi
}

case "$1" in
    install)
      permanently_disable_swap
   ;;

    upgrade)

      permanently_disable_swap
      convert_document_to_journalist_interface
      migrate_custom_logo

      if service_exists 'haveged'; then
        systemctl stop haveged
        systemctl disable haveged
        systemctl mask haveged
      fi

      if service_exists 'haveged'; then
        systemctl stop haveged
        systemctl disable haveged
        systemctl mask haveged
      fi

    ;;

    abort-upgrade)
    ;;

    *)
        echo "preinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
