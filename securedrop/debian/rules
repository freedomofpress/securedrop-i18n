#!/usr/bin/make -f
include /usr/share/dpkg/pkg-info.mk

DEB_DH_INSTALL_ARGS=-X .git

%:
	dh $@ --with python-virtualenv --with systemd

override_dh_gencontrol:
	dh_gencontrol -- $(SUBSTVARS)

# Move the conffile in version control to squash the autogenerated one
# by debhelper, as files in /etc/ are automatically marked as
# conffiles.  We are shipping AppArmor profiles via this package, and
# want them to be correctly updated with each update.
override_dh_installdeb:
	dh_installdeb
	echo "" > ${CURDIR}/debian/securedrop-app-code/DEBIAN/conffiles
	echo "" > ${CURDIR}/debian/securedrop-config/DEBIAN/conffiles
	echo "" > ${CURDIR}/debian/securedrop-keyring/DEBIAN/conffiles

override_dh_install:
	# Build translations
	bash ./debian/translations.sh
	# Things to exclude
	find . -type f -name '*requirements.in' -delete
	find . -type f -name '*.mako' -delete
	rm upload-screenshots.py
	dh_install

override_dh_strip_nondeterminism:
	# Delete non-reproducible things
	find ./debian/ -type f -name '*.pyc' -delete
	find ./debian/ -type f -name 'pip-selfcheck.json' -delete
	find ./debian/ -type f -name 'RECORD' -delete
	dh_strip_nondeterminism $@

override_dh_virtualenv:
	cp requirements/python3/requirements.txt requirements.txt
	dh_virtualenv \
		--package=securedrop-app-code \
		--python=/usr/bin/python3 \
		--builtin-venv \
		--preinstall setuptools-scm==6.0.1 \
		--preinstall pip==21.3 \
		--extra-pip-arg "--verbose" \
		--extra-pip-arg "--no-deps" \
		--extra-pip-arg "--no-binary=:all:" \
		--extra-pip-arg "--no-cache-dir"
	# Strip non-reproducible debugging information
	dh_strip $@ --no-automatic-dbgsym

override_dh_gencontrol:
	dh_gencontrol -psecuredrop-ossec-agent -- "-v3.6.0+${DEB_VERSION}"
	dh_gencontrol -psecuredrop-ossec-server -- "-v3.6.0+${DEB_VERSION}"
	dh_gencontrol -psecuredrop-keyring -- "-v0.2.1+${DEB_VERSION}"
	dh_gencontrol --remaining-packages

#
# Have to override the automatic service handling since we have more
# than one.
#
override_dh_installinit:
	dh_installinit --noscripts

# We want to enable all systemd units except those that are run by timers, so
# we have to mark those as --no-enable first, then the final
# `dh_systemd_enable` invocation will enable the rest.
override_dh_systemd_enable:
	dh_systemd_enable --no-enable securedrop-submissions-today.service
	dh_systemd_enable --no-enable securedrop-clean-tmp.service
	dh_systemd_enable --no-enable securedrop-remove-pending-sources.service
	dh_systemd_enable

# This is basically the same as the enable stanza above, just whether the
# unit should be started after installation.
override_dh_systemd_start:
	dh_systemd_start --no-start securedrop-submissions-today.service
	dh_systemd_start --no-start securedrop-clean-tmp.service
	dh_systemd_start --no-start securedrop-remove-pending-sources.service
	dh_systemd_start
