---
enable_ssh_over_tor: true

# Set the default SSH listening address for the sshd config file.
# If enable_ssh_over_tor is false, open up SSH (additional iptables templates
# helps us for restriction) otherwise restrict to localhost (tor).
ssh_listening_address: "{{ '127.0.0.1' if enable_ssh_over_tor else '0.0.0.0' }}"

# This var is defined in the tor-hidden-services role, but won't be available
# in separate plays, so declaring it within the context of iptables role, so
# the hostname files can be fetched back to the Admin Workstation.
tor_hidden_services_parent_dir: /var/lib/tor/services

# Platform specific command for inferring the local interface utilized
# to route to a specific IP host
admin_net_int:
  Linux:
    cmd: "/bin/ip r get "
    rgx: "(?<=dev )\\w+"
  Darwin:
    cmd: "/sbin/route -n get "
    rgx: "(?<=interface: )\\w+"

# Whether to fetch back client-auth settings from the remote hosts.
# We make this conditional to support disabling during dynamic role includes,
# required for the ssh-over-lan strategy.
fetch_tor_client_auth_configs: true

# v2 Tor onion services are on / v3 Tor onion services are off by default for backwards
# compatibility. Note that new install after 1.0 will have v3 enabled by sdconfig which
# will override these variables.
v2_onion_services: true
v3_onion_services: false

# Lookup table for querying keypair info from the local JSON
# file on the Admin Workstation, required for configuring client
# auth on Tor v3 Onion URLs. See the tor_v3_keys.json file for
# reference on structure.
tor_v3_service_map:
  app-journalist.auth_private: "app_journalist_private_key"
  app-ssh.auth_private: "app_ssh_private_key"
  mon-ssh.auth_private: "mon_ssh_private_key"

time_service_user: '{{ "root" if ansible_distribution_release == "xenial" else "systemd-timesync" }}'
